name: 🇬🇵 Build Clavier Créole Guadeloupéen

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: 🔨 Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: ☕ Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🐘 Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        
    - name: 📱 Grant Execute Permission for Gradlew
      run: chmod +x android_keyboard/gradlew
      
    - name: 🔍 Verify Project Structure
      run: |
        echo "📂 Project structure verification:"
        ls -la android_keyboard/
        echo "📱 Gradle wrapper check:"
        ls -la android_keyboard/gradlew*
        
    - name: 🔍 Lint Check
      working-directory: android_keyboard
      run: ./gradlew lintDebug
        
    - name: 🧪 Run Unit Tests
      working-directory: android_keyboard
      run: ./gradlew testDebugUnitTest
        
    - name: 🔨 Build Debug APK
      working-directory: android_keyboard
      run: ./gradlew assembleDebug
        
    - name: 📦 Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: Potomitan-Kreyol-Keyboard-Debug
        path: android_keyboard/app/build/outputs/apk/debug/*.apk
        retention-days: 7
        
    - name: 🔨 Build Release APK (if main branch)
      if: github.ref == 'refs/heads/main'
      working-directory: android_keyboard
      run: ./gradlew assembleRelease
        
    - name: 📦 Upload Release APK
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: Potomitan-Kreyol-Keyboard-Release
        path: android_keyboard/app/build/outputs/apk/release/*.apk
        retention-days: 30

  code-quality:
    name: 🔍 Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: ☕ Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📱 Grant Execute Permission for Gradlew
      run: chmod +x android_keyboard/gradlew
      
    - name: 🔍 Kotlin Lint
      working-directory: android_keyboard
      run: ./gradlew ktlintCheck || true
        
    - name: 📊 Generate Code Coverage
      working-directory: android_keyboard
      run: ./gradlew jacocoTestReport || true
        
    - name: 📈 Upload Coverage Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: android_keyboard/app/build/reports/
        retention-days: 7

  dictionary-validation:
    name: 🇬🇵 Validate Créole Dictionary
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 📚 Install Python Dependencies
      run: |
        pip install json5 pytest
        
    - name: ✅ Validate Dictionary JSON
      run: |
        python -c "
        import json
        import sys
        
        try:
            # Validation du dictionnaire créole
            with open('clavier_creole/assets/creole_dict.json', 'r', encoding='utf-8') as f:
                dict_data = json.load(f)
            
            print(f'✅ Dictionnaire valide: {len(dict_data)} mots créoles')
            
            # Vérification de la structure
            if isinstance(dict_data, list) and len(dict_data) > 0:
                if isinstance(dict_data[0], list) and len(dict_data[0]) == 2:
                    print('✅ Structure [mot, fréquence] respectée')
                else:
                    print('❌ Structure incorrecte')
                    sys.exit(1)
            else:
                print('❌ Format de dictionnaire invalide')
                sys.exit(1)
                
        except Exception as e:
            print(f'❌ Erreur validation dictionnaire: {e}')
            sys.exit(1)
        "
        
    - name: 📊 Dictionary Statistics
      run: |
        python -c "
        import json
        
        with open('clavier_creole/assets/creole_dict.json', 'r', encoding='utf-8') as f:
            dict_data = json.load(f)
        
        total_words = len(dict_data)
        frequencies = [item[1] for item in dict_data if len(item) >= 2]
        
        print(f'📊 Statistiques du dictionnaire créole:')
        print(f'   • Total mots: {total_words}')
        print(f'   • Fréquence max: {max(frequencies) if frequencies else 0}')
        print(f'   • Fréquence min: {min(frequencies) if frequencies else 0}')
        print(f'   • Mots avec accents: {sum(1 for item in dict_data if any(c in item[0] for c in \"àèòéùîç\"))}')
        "

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔍 Run Trivy Vulnerability Scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: 📤 Upload Trivy Results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  notification:
    name: 📢 Build Notification
    runs-on: ubuntu-latest
    needs: [build, code-quality, dictionary-validation]
    if: always()
    
    steps:
    - name: 🎉 Success Notification
      if: needs.build.result == 'success'
      run: |
        echo "🎉 ✅ CLAVIER CRÉOLE GUADELOUPÉEN - BUILD RÉUSSI !"
        echo "🇬🇵 Le clavier Potomitan™ est prêt à être déployé"
        echo "📱 APK généré et disponible dans les artifacts"
        
    - name: ❌ Failure Notification
      if: needs.build.result == 'failure'
      run: |
        echo "❌ 🚨 CLAVIER CRÉOLE - BUILD ÉCHOUÉ"
        echo "🔧 Vérifiez les logs pour diagnostiquer le problème"
        echo "📝 Consultez les rapports de qualité de code"